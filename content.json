{"pages":[{"title":"categories","text":"","link":"/categories/index.html"}],"posts":[{"title":"Hello World","text":"Welcome to","link":"/2020/01/13/hello-word/"},{"title":"Hello World","text":"作为一名开发人员，阅读源码是一个很好的学习方式。本文将结合《Spring源码深度解析》来分析Spring 5.0.6版本的源代码，若有描述错误之处，欢迎指正。Spring是2003年兴起的一个轻量级Java开源框架，旨在解决企业应用开发的复杂性。Spring发展至今，衍生出非常丰富的模块，并应用在多种场景，比如：桌面应用，Web应用等。Spring的模块化可以允许你只使用需要的模块，而不必全部引入。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354public WebApplicationContext initWebApplicationContext(ServletContext servletContext) { //保证只有一个WebApplicationContext //从ServletContext查找WebApplicationContext实例,如果已经存在,则抛出异常 //典型异常:在web.xml中配置了不止一个ContextLoaderListener,造成多次初始化 if (servletContext.getAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE) != null) { throw new IllegalStateException(\"Cannot initialize context because there is already a root application context present - check whether you have multiple ContextLoader* definitions in your web.xml!\"); } else { servletContext.log(\"Initializing Spring root WebApplicationContext\"); Log logger = LogFactory.getLog(ContextLoader.class); if (logger.isInfoEnabled()) { logger.info(\"Root WebApplicationContext: initialization started\"); } long startTime = System.currentTimeMillis(); try { if (this.context == null) { //创建WebApplicationContext实例,其实这里创建的是它的子类ConfigurableWebApplicationContext this.context = this.createWebApplicationContext(servletContext); } if (this.context instanceof ConfigurableWebApplicationContext) { ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext)this.context; if (!cwac.isActive()) { if (cwac.getParent() == null) { ApplicationContext parent = this.loadParentContext(servletContext); cwac.setParent(parent); } this.configureAndRefreshWebApplicationContext(cwac, servletContext); } } servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, this.context); ClassLoader ccl = Thread.currentThread().getContextClassLoader(); if (ccl == ContextLoader.class.getClassLoader()) { currentContext = this.context; } else if (ccl != null) { currentContextPerThread.put(ccl, this.context); } if (logger.isInfoEnabled()) { long elapsedTime = System.currentTimeMillis() - startTime; logger.info(\"Root WebApplicationContext initialized in \" + elapsedTime + \" ms\"); } return this.context; } catch (Error | RuntimeException var8) { logger.error(\"Context initialization failed\", var8); servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, var8); throw var8; } }}","link":"/2020/01/15/spring/101/"}],"tags":[],"categories":[{"name":"java","slug":"java","link":"/categories/java/"},{"name":"spring","slug":"spring","link":"/categories/spring/"}]}